문제
타로는 자주 JOI잡화점에서 물건을 산다. JOI잡화점에는 잔돈으로 500엔, 100엔, 50엔, 10엔, 5엔, 1엔이 충분히 있고, 언제나 거스름돈 개수가 가장 적게 잔돈을 준다. 
타로가 JOI잡화점에서 물건을 사고 카운터에서 1000엔 지폐를 한장 냈을 때, 받을 잔돈에 포함된 잔돈의 개수를 구하는 프로그램을 작성하시오.

스터디에서 문제를 받을때 그리디 문제라고 유형정리를 받았다.
그런데 거스름돈 개수가 가장적게 받을려고 한다면 그리디문제인가?
이 문제가 그리디 유형이라는것을 그냥 찍어서 적용한뒤 맞추는게 아니라
논리적으로 알려면 어떻게 해야할까?

그래서 반대로 생각해 봤다.
가장 거스름돈 개수가 많게 주려면 어떻게 해야할까?
1엔을 가장많이 주고
1엔이 없을땐 5엔을 가장 많이 주는것일것이다.
즉 이논리에서 큰돈이 많이 들어갈수록 적게 주게된다는것을 알수있다.
그러면 이문제는 그리디, 즉 지금바로바로 최적의 답을 찾는게 모이면 전체의 답이된다.

문제풀이

일단 잔돈을 리스트로 묶는다.
이유는 같은 유형의 정보니까.

jandon = [500, 100, 50, 10, 5, 1]

변하는것은 구매하는 가격이므로 가격을 입력값으로 준다.
price = input(int())
그리고 가격에서 우리가 알아야할 잔돈의 총액을 구한다.
total = 1000 - price

총액에서 잔돈으로 0이 될때까지 반복적으로 빼야하므로
for구문을 사용했다.
그리고 우리가 구해야하는것이 잔돈의 갯수니까 이것을 넣는 변수를 하나 만든다.

a = ()
b = ()
for coin in jandon :
  a = total // coin
  b = a + b
  total = total % coin

결론적으로 전체 거스름돈 개수 b를 얻는다.

